<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="8" failed="8" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[TestA Test Started]]>
    </line>
    <line>
      <![CDATA[test1 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test2 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test2 Test Failed..java.lang.AssertionError: expected [true] but found [false]]]>
    </line>
    <line>
      <![CDATA[test3 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test4 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test4 Test Failed..java.lang.AssertionError: expected [true] but found [false]]]>
    </line>
    <line>
      <![CDATA[test5 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test6 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test6 Test Failed..java.lang.AssertionError: expected [false] but found [true]]]>
    </line>
    <line>
      <![CDATA[test7 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test7 Test Failed..java.lang.AssertionError: expected [false] but found [true]]]>
    </line>
    <line>
      <![CDATA[test8 Test Started..null]]>
    </line>
    <line>
      <![CDATA[TestA Test Finished]]>
    </line>
    <line>
      <![CDATA[TestB Test Started]]>
    </line>
    <line>
      <![CDATA[test10 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test10 Test Failed..java.lang.AssertionError: expected [true] but found [false]]]>
    </line>
    <line>
      <![CDATA[test11 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test12 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test12 Test Failed..java.lang.AssertionError: expected [true] but found [false]]]>
    </line>
    <line>
      <![CDATA[test13 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test14 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test14 Test Failed..java.lang.AssertionError: expected [false] but found [true]]]>
    </line>
    <line>
      <![CDATA[test15 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test15 Test Failed..java.lang.AssertionError: expected [false] but found [true]]]>
    </line>
    <line>
      <![CDATA[test16 Test Started..null]]>
    </line>
    <line>
      <![CDATA[test9 Test Started..null]]>
    </line>
  </reporter-output>
  <suite started-at="2020-11-16T18:40:19 IST" name="Suite" finished-at="2020-11-16T18:40:20 IST" duration-ms="1356">
    <groups>
    </groups>
    <test started-at="2020-11-16T18:40:19 IST" name="TestA" finished-at="2020-11-16T18:40:20 IST" duration-ms="862">
      <class name="testRunners.test">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="beforeClass" finished-at="2020-11-16T18:40:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="beforeMethod" finished-at="2020-11-16T18:40:19 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test.test1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="test1" finished-at="2020-11-16T18:40:19 IST" duration-ms="4" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[test1 Test Started..null]]>
            </line>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="afterMethod" finished-at="2020-11-16T18:40:19 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=test.test1()[pri:0, instance:testRunners.test@373ebf74] output=test1 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test2()[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="test2" finished-at="2020-11-16T18:40:19 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testRunners.test.test2(test.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test2 Test Started..null]]>
            </line>
            <line>
              <![CDATA[test2 Test Failed..java.lang.AssertionError: expected [true] but found [false]]]>
            </line>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="beforeMethod" finished-at="2020-11-16T18:40:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test.test2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="afterMethod" finished-at="2020-11-16T18:40:19 IST" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=FAILURE method=test.test2()[pri:0, instance:testRunners.test@373ebf74] output=test2 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="beforeMethod" finished-at="2020-11-16T18:40:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test.test3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test3()[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="test3" finished-at="2020-11-16T18:40:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[test3 Test Started..null]]>
            </line>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="afterMethod" finished-at="2020-11-16T18:40:19 IST" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test3 status=SUCCESS method=test.test3()[pri:0, instance:testRunners.test@373ebf74] output=test3 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="beforeMethod" finished-at="2020-11-16T18:40:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test.test4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test4()[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="test4" finished-at="2020-11-16T18:40:19 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testRunners.test.test4(test.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test4 Test Started..null]]>
            </line>
            <line>
              <![CDATA[test4 Test Failed..java.lang.AssertionError: expected [true] but found [false]]]>
            </line>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:19 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test4 status=FAILURE method=test.test4()[pri:0, instance:testRunners.test@373ebf74] output=test4 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test.test5()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test5()[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="test5" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[test5 Test Started..null]]>
            </line>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test5 status=SUCCESS method=test.test5()[pri:0, instance:testRunners.test@373ebf74] output=test5 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test.test6()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test6()[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="test6" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testRunners.test.test6(test.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test6 Test Started..null]]>
            </line>
            <line>
              <![CDATA[test6 Test Failed..java.lang.AssertionError: expected [false] but found [true]]]>
            </line>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test6 status=FAILURE method=test.test6()[pri:0, instance:testRunners.test@373ebf74] output=test6 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test.test7()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test7()[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="test7" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at testRunners.test.test7(test.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test7 Test Started..null]]>
            </line>
            <line>
              <![CDATA[test7 Test Failed..java.lang.AssertionError: expected [false] but found [true]]]>
            </line>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="40" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test7 status=FAILURE method=test.test7()[pri:0, instance:testRunners.test@373ebf74] output=test7 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test8()[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="test8" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[test8 Test Started..null]]>
            </line>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test.test8()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test@373ebf74]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test8 status=SUCCESS method=test.test8()[pri:0, instance:testRunners.test@373ebf74] output=test8 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testRunners.test -->
    </test> <!-- TestA -->
    <test started-at="2020-11-16T18:40:20 IST" name="TestB" finished-at="2020-11-16T18:40:20 IST" duration-ms="412">
      <class name="testRunners.test2">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:19 IST" name="beforeSuite" finished-at="2020-11-16T18:40:19 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="beforeClass" finished-at="2020-11-16T18:40:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test10()[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="test10" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testRunners.test2.test10(test2.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test10 Test Started..null]]>
            </line>
            <line>
              <![CDATA[test10 Test Failed..java.lang.AssertionError: expected [true] but found [false]]]>
            </line>
          </reporter-output>
        </test-method> <!-- test10 -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test2.test10()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="38" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test10 status=FAILURE method=test2.test10()[pri:0, instance:testRunners.test2@31000e60] output=test10 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test2.test11()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test11()[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="test11" finished-at="2020-11-16T18:40:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[test11 Test Started..null]]>
            </line>
          </reporter-output>
        </test-method> <!-- test11 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test11 status=SUCCESS method=test2.test11()[pri:0, instance:testRunners.test2@31000e60] output=test11 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test2.test12()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test12()[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="test12" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testRunners.test2.test12(test2.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test12 Test Started..null]]>
            </line>
            <line>
              <![CDATA[test12 Test Failed..java.lang.AssertionError: expected [true] but found [false]]]>
            </line>
          </reporter-output>
        </test-method> <!-- test12 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="40" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test12 status=FAILURE method=test2.test12()[pri:0, instance:testRunners.test2@31000e60] output=test12 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test2.test13()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test13 status=SUCCESS method=test2.test13()[pri:0, instance:testRunners.test2@31000e60] output=test13 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test13()[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="test13" finished-at="2020-11-16T18:40:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[test13 Test Started..null]]>
            </line>
          </reporter-output>
        </test-method> <!-- test13 -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test2.test14()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test14()[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="test14" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testRunners.test2.test14(test2.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test14 Test Started..null]]>
            </line>
            <line>
              <![CDATA[test14 Test Failed..java.lang.AssertionError: expected [false] but found [true]]]>
            </line>
          </reporter-output>
        </test-method> <!-- test14 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test14 status=FAILURE method=test2.test14()[pri:0, instance:testRunners.test2@31000e60] output=test14 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test2.test15()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test15()[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="test15" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at testRunners.test2.test15(test2.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test15 Test Started..null]]>
            </line>
            <line>
              <![CDATA[test15 Test Failed..java.lang.AssertionError: expected [false] but found [true]]]>
            </line>
          </reporter-output>
        </test-method> <!-- test15 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test15 status=FAILURE method=test2.test15()[pri:0, instance:testRunners.test2@31000e60] output=test15 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test2.test16()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test16()[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="test16" finished-at="2020-11-16T18:40:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[test16 Test Started..null]]>
            </line>
          </reporter-output>
        </test-method> <!-- test16 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test16 status=SUCCESS method=test2.test16()[pri:0, instance:testRunners.test2@31000e60] output=test16 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="beforeMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testRunners.test2.test9()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test9()[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="test9" finished-at="2020-11-16T18:40:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[test9 Test Started..null]]>
            </line>
          </reporter-output>
        </test-method> <!-- test9 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testRunners.test2@31000e60]" started-at="2020-11-16T18:40:20 IST" name="afterMethod" finished-at="2020-11-16T18:40:20 IST" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test9 status=SUCCESS method=test2.test9()[pri:0, instance:testRunners.test2@31000e60] output=test9 Test Started..null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testRunners.test2 -->
    </test> <!-- TestB -->
  </suite> <!-- Suite -->
</testng-results>
